cmake_minimum_required(VERSION 3.10)
project(arabicwhisper_tests)

# Set C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Add compile definitions for testing
# add_definitions(-DTESTING_MODE)  # Remove this so main function is included

# Include directories
set(CTRANSLATE2_ROOT "/Users/amraboelela/develop/android/CTranslate2")
include_directories(${CTRANSLATE2_ROOT}/include)
include_directories(../../../Sources/faster_whisper/include)
include_directories(../../../Sources/faster_whisper/whisper)

# Find required packages
# find_package(PkgConfig REQUIRED)  # Remove this as it's not needed for our simple test

# Try to find zlib
find_package(ZLIB REQUIRED)

# Create test executable for integration test
add_executable(
    test_whisper_audio
    ../whisper_audio_tests.cpp
    ../../../Sources/faster_whisper/whisper/whisper_audio.cpp
    ../../../Sources/faster_whisper/feature_extractor.cpp
    ../../../Sources/faster_whisper/audio.cpp
    ../../../Sources/faster_whisper/utils.cpp
    # Add other dependencies as needed
)

# Link libraries for test
target_link_libraries(
    test_whisper_audio
    ${ZLIB_LIBRARIES}
    m  # math library
)

# Enable testing
enable_testing()

# Add the test
add_test(NAME whisper_audio_test COMMAND test_whisper_audio)

# Print instructions
message(STATUS "To run tests:")
message(STATUS "  mkdir build && cd build")
message(STATUS "  cp ../CMakeLists_test.txt ./CMakeLists.txt")
message(STATUS "  cmake .")
message(STATUS "  make")
message(STATUS "  ./test_whisper_audio")
message(STATUS "  OR: make test")